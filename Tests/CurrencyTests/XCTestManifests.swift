#if !canImport(ObjectiveC)
import XCTest

extension AnyCurrencyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnyCurrencyTests = [
        ("testAddition", testAddition),
        ("testComparable", testComparable),
        ("testDescription", testDescription),
        ("testDivision", testDivision),
        ("testEquatable", testEquatable),
        ("testHashable", testHashable),
        ("testInit", testInit),
        ("testMinorUnits", testMinorUnits),
        ("testMultiplication", testMultiplication),
        ("testSequenceSum", testSequenceSum),
        ("testSequenceSum_withPredicate", testSequenceSum_withPredicate),
        ("testStringInterpolation_customFormatter", testStringInterpolation_customFormatter),
        ("testStringInterpolation_customLocale", testStringInterpolation_customLocale),
        ("testStringInterpolation_defaultFormatter", testStringInterpolation_defaultFormatter),
        ("testStringInterpolation_description", testStringInterpolation_description),
        ("testStringInterpolation_optional", testStringInterpolation_optional),
        ("testSubtraction", testSubtraction),
    ]
}

extension CurrencyMintTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CurrencyMintTests = [
        ("testLookupByNum_fails", testLookupByNum_fails),
        ("testLookupByNum_passes", testLookupByNum_passes),
        ("testLookupByNum_withAmount", testLookupByNum_withAmount),
        ("testLookupByString_fails", testLookupByString_fails),
        ("testLookupByString_passes", testLookupByString_passes),
        ("testLookupByString_withAmount", testLookupByString_withAmount),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AnyCurrencyTests.__allTests__AnyCurrencyTests),
        testCase(CurrencyMintTests.__allTests__CurrencyMintTests),
    ]
}
#endif
